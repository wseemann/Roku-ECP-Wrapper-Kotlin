plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.9.10'
    id 'maven-publish'
    id 'signing'
}

version = "1.4.0"

jar {
    manifest {
        attributes 'Implementation-Title': 'Roku ECP Wrapper Kotlin',
                   'Implementation-Version': version
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

publishing {
    repositories {
        maven {
            name "ossrh-staging-api"
            url "https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/"
            credentials {
                username = project.findProperty("sonatype_username")
                password = project.findProperty("sonatype_password")
            }
        }
        maven {
            name "local"
            url = uri("${buildDir}/repo")
        }
    }
}

signing {
    sign publishing.publications
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.github.wseemann'
            artifactId = 'roku-ecp-wrapper-kotlin'
            version = version

            from components.java

            pom {
                name = 'Roku-ECP-Wrapper-Kotlin'
                description = 'Roku ECP Wrapper is a Kotlin based wrapper for the Roku External Control Protocol (ECP).'
                url = 'https://github.com/wseemann/Roku-ECP-Wrapper-Kotlin'
                packaging = 'jar'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'wseemann'
                        name = 'William Seemann'
                    }
                }
                scm {
                    connection = 'scm:hg:https://github.com/wseemann/Roku-ECP-Wrapper-Kotlin'
                    developerConnection = 'scm:hg:https://github.com/wseemann/Roku-ECP-Wrapper-Kotlin'
                    url = 'https://github.com/wseemann/Roku-ECP-Wrapper-Kotlin'
                }
            }
        }
    }
}

// Finalize Upload to Central Portal
// https://central.sonatype.org/publish/publish-portal-ossrh-staging-api/#ensuring-deployment-visibility-in-the-central-publisher-portal
tasks.register("finalizeSonatypeUpload") {
    println("Running finalizeSonatypeUpload...")
    group = "publishing"
    description = "Call Sonatype Central to finalize artifact upload"

    dependsOn "publish"

    doLast {
        def namespace = "com.github.wseemann"
        def token = project.findProperty("sonatype_password")

        if (!namespace || !token) {
            throw new GradleException("Missing 'sonatype_namespace' or 'sonatype_token' project properties")
        }

        def url = "https://central.sonatype.com/api/v1/manual/upload/defaultRepository/${namespace}"
        println "Finalizing upload with POST to: $url"

        def process = ["curl", "-X", "POST", url, "-H", "Authorization: Bearer $token"].execute()
        def output = new StringBuffer()
        process.consumeProcessOutput(output, output)
        process.waitFor()

        if (process.exitValue() != 0) {
            throw new GradleException("Finalization failed: ${output.toString()}")
        }

        println "Sonatype upload finalized successfully"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.jdom:jdom2:2.0.6'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-all:1.8.4'
    testImplementation 'junit:junit:4.13.1'
}
